<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:background="@color/only"
    android:layout_height="match_parent"
    tools:context=".basicActivity">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        >
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content">
            <com.pierfrancescosoffritti.androidyoutubeplayer.core.player.views.YouTubePlayerView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                app:videoId="eIrMbAQSU34"
                app:autoPlay="true"
                >

            </com.pierfrancescosoffritti.androidyoutubeplayer.core.player.views.YouTubePlayerView>
        </LinearLayout>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:textColor="@color/black"
            android:text="Java Programming Basics"
            android:fontFamily="@font/fct"
            android:textSize="@dimen/_20sdp"
            android:layout_margin="@dimen/_10sdp"
            >

        </TextView>

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_margin="@dimen/_10sdp"
            android:gravity="left"
            android:textColor="@color/black"
            android:justificationMode="inter_word"
            android:text="Java is one of the most popular and widely used programming language and platform. A platform is an environment that helps to develop and run programs written in any programming language.
Java is fast, reliable and secure. From desktop to web applications, scientific supercomputers to gaming consoles, cell phones to the Internet, Java is used in every nook and corner.\n\nHowever to become proficient in any programming language, one Firstly needs to understand the basics of that language.\n\nTherefore, below are the basics of Java in the format in which it will help you the most to get the headstart:\n\nWhen we consider a Java program, it can be defined as a collection of objects that communicate via invoking each other's methods. Let us now briefly look into what do class, object, methods, and instance variables mean.\n\nObject − Objects have states and behaviors. Example: A dog has states - color, name, breed as well as behavior such as wagging their tail, barking, eating. An object is an instance of a class.\n\nClass − A class can be defined as a template/blueprint that describes the behavior/state that the object of its type supports.\n\nMethods − A method is basically a behavior. A class can contain many methods. It is in methods where the logics are written, data is manipulated and all the actions are
executed.\n\nInstance Variables − Each object has its unique set of instance variables. An object's state is created by the values assigned to these instance variables."
            >

        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:textColor="@color/black"
            android:text="Java First Program"
            android:fontFamily="@font/fct"
            android:textSize="@dimen/_20sdp"
            android:layout_margin="@dimen/_10sdp"
            >

        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_margin="@dimen/_10sdp"
            android:gravity="left"
            android:textColor="@color/black"
            android:justificationMode="inter_word"
            android:text="Let us look at a simple code that will print the words Hello World.\n\n\n
public class MyFirstJavaProgram {\n\n        /* This is my first java program.\n         * This will print 'Hello World' as the output\n         */
\n\n         public static void main(String []args) {\n           System.out.println(HelloWOrld\);\n\n\n Output: HelloWorld
\n\n\npublic static void main(String args[]) − Java program processing starts from the main() method which is a mandatory part of every Java program.
"
            >

        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:textColor="@color/black"
            android:text="Java identifiers"
            android:fontFamily="@font/fct"
            android:textSize="@dimen/_17sdp"
            android:layout_margin="@dimen/_10sdp"
            >

        </TextView>

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_margin="@dimen/_10sdp"
            android:gravity="left"
            android:textColor="@color/black"
            android:justificationMode="inter_word"
            android:text="All Java components require names. Names used for classes, variables, and methods are called identifiers.\n\nIn Java, there are several points to remember about identifiers. They are as follows −\n\n
        All identifiers should begin with a letter (A to Z or a to z), currency character ($) or an underscore (_).
After the first character, identifiers can have any combination of characters.\n\nA key word cannot be used as an identifier.\n\nMost importantly, identifiers are case sensitive."
            >

        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:textColor="@color/black"
            android:text="Java Modifiers"
            android:fontFamily="@font/fct"
            android:textSize="@dimen/_17sdp"
            android:layout_margin="@dimen/_10sdp"
            >

        </TextView>

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_margin="@dimen/_10sdp"
            android:gravity="left"
            android:textColor="@color/black"
            android:justificationMode="inter_word"
            android:text="Like other languages, it is possible to modify classes, methods, etc., by using modifiers. There are two categories of modifiers −\n\nAccess Modifiers − default, public , protected, private\nNon-access Modifiers − final, abstract, strictfp
\n\nWe will be looking into more details about modifiers in the next section.">

        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:textColor="@color/black"
            android:text="Java Variables"
            android:fontFamily="@font/fct"
            android:textSize="@dimen/_17sdp"
            android:layout_margin="@dimen/_10sdp"
            >

        </TextView>

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_margin="@dimen/_10sdp"
            android:gravity="left"
            android:textColor="@color/black"
            android:justificationMode="inter_word"
            android:text="Following are the types of variables in Java −\n\n

Local Variables\n\n
Class Variables (Static Variables)\n\n
Instance Variables (Non-static Variables)">

        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:textColor="@color/black"
            android:text="Java Arrays"
            android:fontFamily="@font/fct"
            android:textSize="@dimen/_17sdp"
            android:layout_margin="@dimen/_10sdp"
            >

        </TextView>

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_margin="@dimen/_10sdp"
            android:gravity="left"
            android:textColor="@color/black"
            android:justificationMode="inter_word"
            android:text="Arrays are objects that store multiple variables of the same type. However, an array itself is an object on the heap. We will look into how to declare, construct, and initialize in the upcoming chapters.">

        </TextView>

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:textColor="@color/black"
            android:text="Java Enums"
            android:fontFamily="@font/fct"
            android:textSize="@dimen/_17sdp"
            android:layout_margin="@dimen/_10sdp"
            >

        </TextView>

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_margin="@dimen/_10sdp"
            android:gravity="left"
            android:textColor="@color/black"
            android:justificationMode="inter_word"
            android:text="Enums were introduced in Java 5.0. Enums restrict a variable to have one of only a few predefined values. The values in this enumerated list are called enums.
\n\nWith the use of enums it is possible to reduce the number of bugs in your code.\n\n\nFor example, if we consider an application for a fresh juice shop, it would be possible to restrict the glass size to small, medium, and large. This would make sure that it would not allow anyone to order any size other than small, medium, or large.">

        </TextView>

    </LinearLayout>
</ScrollView>